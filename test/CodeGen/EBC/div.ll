; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=ebc -verify-machineinstrs < %s \
; RUN:  | FileCheck -check-prefix=EBC %s

define i64 @udiv_constant(i64 %a) nounwind {
; EBC-LABEL: udiv_constant:
; EBC:       ; %bb.0:
; EBC-NEXT:    push64 r1
; EBC-NEXT:    movqw r7, r0 (0,16)
; EBC-NEXT:    movqq r7, @r7
; EBC-NEXT:    moviww r1, 5
; EBC-NEXT:    divu64 r7, r1
; EBC-NEXT:    pop64 r1
; EBC-NEXT:    ret
  %1 = udiv i64 %a, 5
  ret i64 %1
}

define i64 @udiv_pow2(i64 %a) nounwind {
; EBC-LABEL: udiv_pow2:
; EBC:       ; %bb.0:
; EBC-NEXT:    push64 r1
; EBC-NEXT:    movqw r7, r0 (0,16)
; EBC-NEXT:    movqq r7, @r7
; EBC-NEXT:    moviww r1, 3
; EBC-NEXT:    shr64 r7, r1
; EBC-NEXT:    pop64 r1
; EBC-NEXT:    ret
  %1 = udiv i64 %a, 8
  ret i64 %1
}

define i64 @sdiv_constant(i64 %a) nounwind {
; EBC-LABEL: sdiv_constant:
; EBC:       ; %bb.0:
; EBC-NEXT:    push64 r1
; EBC-NEXT:    movqw r7, r0 (0,16)
; EBC-NEXT:    movqq r7, @r7
; EBC-NEXT:    moviww r1, 5
; EBC-NEXT:    div64 r7, r1
; EBC-NEXT:    pop64 r1
; EBC-NEXT:    ret
  %1 = sdiv i64 %a, 5
  ret i64 %1
}

define i64 @sdiv_pow2(i64 %a) nounwind {
; EBC-LABEL: sdiv_pow2:
; EBC:       ; %bb.0:
; EBC-NEXT:    push64 r1
; EBC-NEXT:    push64 r2
; EBC-NEXT:    movqw r7, r0 (0,24)
; EBC-NEXT:    movqq r7, @r7
; EBC-NEXT:    moviww r1, 63
; EBC-NEXT:    movqq r2, r7
; EBC-NEXT:    ashr64 r2, r1
; EBC-NEXT:    moviww r1, 61
; EBC-NEXT:    shr64 r2, r1
; EBC-NEXT:    add64 r7, r2
; EBC-NEXT:    moviww r1, 3
; EBC-NEXT:    ashr64 r7, r1
; EBC-NEXT:    pop64 r2
; EBC-NEXT:    pop64 r1
; EBC-NEXT:    ret
  %1 = sdiv i64 %a, 8
  ret i64 %1
}
