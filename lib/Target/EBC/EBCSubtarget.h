//===-- EBCSubtarget.h - Define Subtarget for the EBC -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the EBC specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_EBC_EBCSUBTARGET_H
#define LLVM_LIB_TARGET_EBC_EBCSUBTARGET_H

#include "EBCFrameLowering.h"
#include "EBCISelLowering.h"
#include "EBCInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/Target/TargetMachine.h"

#define GET_SUBTARGETINFO_HEADER
#include "EBCGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class EBCSubtarget : public EBCGenSubtargetInfo {
  virtual void anchor();
  EBCFrameLowering FrameLowering;
  EBCInstrInfo InstrInfo;
  EBCRegisterInfo RegInfo;
  EBCTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;

  /// Initializes using the passed in CPU and feature strings so that we can
  /// use initializer lists for subtarget initialization.
  EBCSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

public:
  // Initializes the data members to match that of the specified triple.
  EBCSubtarget(const Triple &TT, const std::string &CPU,
               const std::string &FS, const TargetMachine &TM);

  // Parses features string setting specified subtarget options. The
  // definition of this function is auto-generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  const EBCFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const EBCInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const EBCRegisterInfo *getRegisterInfo() const override {
    return &RegInfo;
  }
  const EBCTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }
};
} // End llvm namespace

#endif
